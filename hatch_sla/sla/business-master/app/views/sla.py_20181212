# -*- coding: utf-8 -*-

from flask import  render_template, Response, request, redirect
from app.db import  MySQL_query, Presto_query, Cache_query

from .mythread import MyThread
from .query_time import get_time

import threading
import datetime
import json
import os

rlock=threading.RLock()

def sla_query(start, stop, for_list, start_time, end_time, old_time, query_time, url, none_url, none_count):
    print("进入查询")
    result_list = []
    mysql_object = MySQL_query()

    for i in range(start, stop):
        name = for_list[i]['name']
        person = for_list[i]['person']
        name_english = url_next = for_list[i]['name_english']
        name_english_main = for_list[i]['name_english_main']
    
        if name_english_main == "domain":
            domain_sql = "select name from domain where name='%s'" % name_english
            
        elif name_english_main == "None":
            domain_sql = "select domain.name as domain from domain   \
               left join subbusiness on domain.subbusiness_id=subbusiness.id  \
               left join business on business.id=subbusiness.business_id where business.name_english='%s'" % name_english
        else:
            domain_sql = "select domain.name as domain from domain   \
                 left join subbusiness on domain.subbusiness_id=subbusiness.id  \
                 left join business on business.id=subbusiness.business_id where business.name_english='%s' and subbusiness.name_english='%s'" % (name_english_main, name_english)
    
        #print(domain_sql)
        domain = mysql_object.mysql_RowProxy_to_str(domain_sql, 'cmdb')
        #print("domain=",domain)
    
        if domain:
            result_json = {}
            domain_count = len(domain.split(',')) 
    
            presto_sql = "WITH \
                log_all AS (select '1' as id,count(*) as log_all from nginx_access where dt > '%s' and dt <= '%s' and domain in (%s)), \
                log_good AS (select '1' as id,count(*) as log_good from nginx_access where dt > '%s' and dt <= '%s' and domain in (%s) and (status < 499 or (status=499 and request_time<0.5))), \
                last_log_all AS (select '1' as id,count(*) as last_log_all from nginx_access where dt > '%s' and dt <= '%s' and domain in (%s) ), \
                last_log_good AS (select '1' as id,count(*) as last_log_good from nginx_access  where dt > '%s' and dt <= '%s' and domain in (%s) and (status < 499 or (status=499 and request_time<0.5))), \
                log_result AS (select log_all.log_all as log_all, last_log_all.last_log_all as last_log_all,  \
                              log_good.log_good as log_good, last_log_good.last_log_good as last_log_good,\
                              COALESCE(TRY(log_good.log_good * 100.0000 / log_all.log_all), 0) AS log_ava, \
                              COALESCE(TRY(last_log_good.last_log_good * 100.0000 / last_log_all.last_log_all), 0) AS last_log_ava from log_all \
                              join log_good on log_all.id = log_good.id join last_log_all on log_good.id=last_log_all.id join last_log_good on last_log_good.id=last_log_all.id)  \
                select  * ,(last_log_ava - log_ava) as difference_ava from log_result" % \
                (old_time, end_time, domain, old_time, end_time, domain, end_time, start_time, domain,  end_time, start_time, domain)
            print(presto_sql)
            presto_object = Presto_query()
            result_query = presto_object.sql_query(presto_sql)
            #print(result_query)
            
            result_json['url'] = url
            result_json['none_url'] = none_url
            result_json['none_count'] = none_count
            result_json['query_time'] = query_time

            result_json['name'] = name
            result_json['person'] = person
            result_json['domain_count'] = domain_count
            result_json['name_english'] = name_english
            result_json['name_english_main'] = name_english_main    
            result_json['log_all'] = result_query[0][0]
            result_json['last_log_all'] = result_query[0][1]
            result_json['log_good'] = result_query[0][2]
            result_json['last_log_good'] = result_query[0][3]
            result_json['log_ava'] = result_query[0][4]
            result_json['last_log_ava'] = float(result_query[0][5])
            result_json['difference_ava'] = result_query[0][6]
            #print(result_json)
            result_list.append(result_json)
    return result_list


def  sla_cache(sql):
    cache_object = Cache_query()

    url = request.url  
    url = url.split('?')[0]    
    none_url = url.split('sla')[0]     
    start_time, end_time, old_time, query_time= get_time()   #query_time for ava.htm

    path = request.path

    cache_key = query_time + "__" + start_time + "__" + path.replace('/', '_')   
    print(cache_key)

    rlock.acquire()
    cache = cache_object.get_redis(cache_key)

    if cache:
        print("okokokookokokokokokokk")
        result_tuple = tuple(eval(cache))
        return result_tuple
    else:
        ### 最初函数的条件 sql，一级业务线/二级业务线/域名级别, 过滤所有内容
        mysql_object = MySQL_query()
        fields = ['name', 'person', 'name_english', 'name_english_main']
        for_list = mysql_object.mysql_RowProxy_to_list(sql, fields, 'cmdb')
    
        if for_list:
            ## 查看所有没有归属的域名信息，用来提醒完善cmdb用
            none_sql = "select count(*) from domain where subbusiness_id is null"
            none_count = mysql_object.sql_query(none_sql, 'cmdb')[0][0]  #补充信息, for ava.html
        
            #### 开启三个线程查询  https://www.cnblogs.com/cuisi/p/6275053.html
            mid = int(len(for_list)/4)
        
            threads = []
            t1 = MyThread(sla_query,args=(0,mid, for_list, start_time, end_time, old_time, query_time, url, none_url, none_count))
            threads.append(t1)
            t2 = MyThread(sla_query,args=(mid,mid+mid, for_list, start_time, end_time, old_time, query_time, url, none_url, none_count))
            threads.append(t2)
            t3 = MyThread(sla_query,args=(mid+mid,mid+mid+mid, for_list, start_time, end_time, old_time, query_time, url, none_url, none_count))
            threads.append(t3)
            t4 = MyThread(sla_query,args=(mid+mid+mid,len(for_list), for_list, start_time, end_time, old_time, query_time, url, none_url, none_count))
            threads.append(t4)
            print(threads)
            
            result = []
            for t in threads:
                t.setDaemon(True)
                t.start()
        
            ##join所完成的工作就是线程同步，即主线程任务结束之后，进入阻塞状态，一直等待其他的子线程执行结束之后
            
            for t in threads:
                #print("bbbbbbbbbbbbbbbbbbbb")
                t.join()  
                result = result + t.get_result()
            
            ## result_list 排序，进缓存
            result.sort(key=lambda  x:(x['last_log_ava'],x['difference_ava']), reverse=False)
            print(result)
            print("nonononononoononono")
            cache_object.set_redis(cache_key,result)
            rlock.release()   ### 解锁
            return result
        else:
           return Response("别闹，去找你 SRE 玩去.....", mimetype='application/json') 
    

def sla_business():
    print("entry sla_business business")
    sql = "select name, person_duty as person, name_english, 'None' as name_english_main from business"
    #result = [{'url': 'http://sre-search.guazi-apps.com/sla', 'none_url': 'http://sre-search.guazi-apps.com/', 'name': '大交易增长平台', 'person': '曹佳', 'query_time': '3d', 'none_count': 528, 'domain_count': 35, 'name_english': 'trade', 'name_english_main': 'None', 'log_all': 129429989, 'last_log_all': 128378166, 'log_good': 129422721, 'last_log_good': 128369101, 'log_ava': '99.9944', 'last_log_ava': 99.9929, 'difference_ava': '-0.0015'}, {'url': 'http://sre-search.guazi-apps.com/sla', 'none_url': 'http://sre-search.guazi-apps.com/', 'name': '新车', 'person': '林正位', 'query_time': '3d', 'none_count': 528, 'domain_count': 66, 'name_english': 'nc', 'name_english_main': 'None', 'log_all': 46121172, 'last_log_all': 49033068, 'log_good': 46119995, 'last_log_good': 49032274, 'log_ava': '99.9974', 'last_log_ava': 99.9984, 'difference_ava': '0.0010'}, {'url': 'http://sre-search.guazi-apps.com/sla', 'none_url': 'http://sre-search.guazi-apps.com/', 'name': '智能平台', 'person': '魏旋', 'query_time': '3d', 'none_count': 528, 'domain_count': 1, 'name_english': 'ai', 'name_english_main': 'None', 'log_all': 678, 'last_log_all': 1086, 'log_good': 678, 'last_log_good': 1086, 'log_ava': '100.0000', 'last_log_ava': 100.0, 'difference_ava': '0.0000'}]
    result = sla_cache(sql)
    
    if result :
        return render_template('sla.html', re=result)
    else:
        return Response("cmdb 数据不全，匹配不到，或者当前阶段没有流量", mimetype='application/json')
        
def sla_subbusiness(business_name_english):
    print("entry sla_subbusiness  subbbusiness subbusiness")
    sql = "select subbusiness.name, subbusiness.person, subbusiness.name_english as name_english, business.name_english as name_english_main from subbusiness  \
               left join business on business.id=subbusiness.business_id where business.name_english='%s'" % business_name_english
    #result = [{'url': 'http://127.0.0.1:5000/sla/nc', 'none_url': 'http://127.0.0.1:5000/', 'name': '供应链平台', 'person': '郝利军', 'query_time': '1d', 'none_count': 591, 'domain_count': 9, 'name_english': 'scp', 'name_english_main': 'nc', 'log_all': 3108, 'last_log_all': 2248, 'log_good': 3107, 'last_log_good': 2247, 'log_ava': '99.9678', 'last_log_ava': 99.9555, 'difference_ava': '-0.0123'}, {'url': 'http://127.0.0.1:5000/sla/nc', 'none_url': 'http://127.0.0.1:5000/', 'name': '新车前端', 'person': '韩兴刚', 'query_time': '1d', 'none_count': 591, 'domain_count': 4, 'name_english': 'front', 'name_english_main': 'nc', 'log_all': 159060, 'last_log_all': 153539, 'log_good': 159056, 'last_log_good': 153538, 'log_ava': '99.9975', 'last_log_ava': 99.9993, 'difference_ava': '0.0018'}, {'url': 'http://127.0.0.1:5000/sla/nc', 'none_url': 'http://127.0.0.1:5000/', 'name': '新车供应链', 'person': '卢玉双', 'query_time': '1d', 'none_count': 591, 'domain_count': 2, 'name_english': 'sc', 'name_english_main': 'nc', 'log_all': 502, 'last_log_all': 348, 'log_good': 502, 'last_log_good': 348, 'log_ava': '100.0000', 'last_log_ava': 100.0, 'difference_ava': '0.0000'}, {'url': 'http://127.0.0.1:5000/sla/nc', 'none_url': 'http://127.0.0.1:5000/', 'name': '毛豆平台', 'person': '郭栩男,万平,于忠民', 'query_time': '1d', 'none_count': 591, 'domain_count': 8, 'name_english': 'plat', 'name_english_main': 'nc', 'log_all': 922, 'last_log_all': 764, 'log_good': 922, 'last_log_good': 764, 'log_ava': '100.0000', 'last_log_ava': 100.0, 'difference_ava': '0.0000'}]
    result = sla_cache(sql)

    if result :
        return render_template('sla.html', re=result)
    else:
        return Response("cmdb 数据不全，匹配不到，或者当前阶段没有流量", mimetype='application/json')

def sla_domain(business_name_english, subbusiness_name_english):
    print("entry sla_domain doamin doamind oamin")
    sql = "select domain.use_for as name, domain.person_duty as person, domain.name as name_english, 'domain' as name_english_main from domain   \
               left join subbusiness on domain.subbusiness_id=subbusiness.id  \
               left join business on business.id=subbusiness.business_id where business.name_english='%s' and subbusiness.name_english='%s'" % (business_name_english, subbusiness_name_english)
    result = sla_cache(sql)

    if result :
        return render_template('sla_domain.html', re=result)
    else:
        return Response("cmdb 数据不全，匹配不到，或者当前阶段没有流量", mimetype='application/json')
    
def sla_none():   # 只查询前三天的数据可用性
    #start_time = (datetime.datetime.now()-datetime.timedelta(days = 1)).strftime('%Y-%m-%d')
    #end_time = (datetime.datetime.now()-datetime.timedelta(days = 4 )).strftime('%Y-%m-%d')
    #start_time = "2018-10-03"
    #end_time = "2018-10-01"
    #sql = "select name from domain where subbusiness_id is null"
    #object = MySQL_query()
    #domain = object.mysql_RowProxy_to_str(sql)
    #print(domain)
    #if domain:
    #    #domain = "'" + "uc.maodou.com" + "'"
    #    sql = "WITH \
    #              last_log_all AS (select domain,count(*) as last_access_all from nginx_access where dt > '%s' and dt <= '%s' and domain in (%s) group by domain), \
    #              last_log_good AS (select domain,count(*) as last_access_good from nginx_access where dt > '%s' and dt <= '%s' and domain in (%s) and status < 499 group by domain ), \
    #              log_result AS (select   last_log_good.last_access_good as last_access_good, last_log_all.last_access_all as last_access_all, \
    #                            COALESCE(TRY(last_log_good.last_access_good * 100.000000 / last_log_all.last_access_all), 0) AS last_access_ava from last_log_all  \
    #                            join  last_log_good on last_log_good.domain=last_log_all.domain) select domain,  * from log_result " %  \
    #                            (end_time, start_time, domain, end_time, start_time, domain)
    #    print(sql)
    #    object = Presto_query()
    #    result = object.sql_query(sql)
    #    print(result)
    #    return render_template('slanone.html', re=result)
    
    #else:
    #       return Response("域名都有归属了...挺好", mimetype='application/json') 
    #return Response("别闹，去找你 SRE 玩去.....", mimetype='application/json') 
    print("entry sla_none none noene")
    sql = "select * from domain where subbusiness_id is null"
    object = MySQL_query()
    result = object.sql_query(sql, 'cmdb')
    if result:
        return render_template('sla_none.html', re=result)
    else:
        return Response("没有数据", mimetype='application/json')

def domain_info(business_name_english, subbusiness_name_english, domain):
    return Response("还没有东西，稍等.....", mimetype='application/json')


